---

  #Note, we're using /bin/bash here rather than /sbin/nologin or /bin/false because we need to be able to log in!
- name: Create Buildbot user
  user:
    name: '{{ buildbot_user }}'
    password: "{{ lookup('password', '/dev/null encrypt=sha1_crypt length=32') }}"
    update_password: always
    home: "{{ buildbot_home }}"
    groups: docker
    shell: /bin/bash
  become: yes
  when: create_buildbot_user

- name: Determine Buildbot user's UID and GID
  getent:
    database: passwd
    key: "{{ buildbot_user }}"
    split: ":"
  become: yes

- name: Ensure required directories exist and have the right permissions
  file:
    state: directory
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  become: yes
  with_items:
    - { path: "{{ buildbot_home }}", owner: "{{ buildbot_user }}", mode: "0755" }
    - { path: "{{ disk_base }}", owner: "{{ buildbot_user }}", mode: "0755" }
    - { path: "{{ buildbot_home }}/buildbot-config", owner: "{{ buildbot_user }}", mode: "0755" }
    - { path: "{{ buildbot_home }}/buildbot-config/secrets", owner: "{{ buildbot_user }}", mode: "0700" }
    - { path: "{{ buildbot_home }}/nginx-config", owner: "{{ buildbot_user }}", mode: "0755" }
    - { path: "{{ buildbot_home }}/m2", owner: 1000, mode: "0700" }
    - { path: "{{ buildbot_home }}/builds", owner: 1000, mode: "0700" }

- name: Add Buildbot cleanup script to the crontab
  cron:
    name: "Remove old build artifacts"
    special_time: hourly
    job: "/bin/bash {{ buildbot_base }}/cleaner.sh"
    user: "{{ buildbot_user }}"
    state: present
  become: yes

