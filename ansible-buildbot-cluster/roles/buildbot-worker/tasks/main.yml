---

- import_tasks: debian.yml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- import_tasks: centos.yml
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Ensuring docker-py is not present
  pip:
    name: "{{ item }}"
    state: absent
  become: yes
  with_items:
    - docker-py

- name: Install docker for Docker latent worker support
  pip:
    name: "{{ item }}"
    state: latest
  become: yes
  with_items:
    - docker
    - docker-compose

- name: Ensuring Docker is connectable via TCP
  template:
    src: daemon.json
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0600
  become: yes
  notify: "Restart Docker"

- name: Clearing out Docker socket settings from systemd unit files
  replace:
    path: /lib/systemd/system/docker.service
    regexp: " -H fd://"
    replace: ""
  become: yes
  notify: "Restart Docker"

- name: Template docker-compose configuration file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ buildbot_user }}"
    mode: 0600
    force: yes
  become: yes
  with_items:
    - { src: "docker-compose.yml", dest: "{{ buildbot_home }}/docker-compose.yml" }
  notify: "Start Databases"

- name: Ensure BuildBot directories exists and has the right permissions
  file:
    state: directory
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: "{{ item.mode }}"
    recurse: yes
  become: yes
  with_items:
    - { path: "{{ buildbot_home }}", owner: "buildbot", mode: "0755" }
    - { path: "{{ buildbot_home }}/.ssh", owner: "buildbot", mode: "0700" }
    #Note: This is the hardcoded buildbot user inside the docker image, do not change this
    - { path: "{{ buildbot_home }}/ssh", owner: 1000, mode: "0700" }
    - { path: "{{ buildbot_home }}/m2", owner: 1000, mode: "0700" }

- name: Templating Maven settings
  template:
    src: settings.xml
    dest: "{{ buildbot_home }}/m2/settings.xml"
    owner: 1000
    group: 1000
    mode: 0600
  become: yes

- name: Creating copy of SSH keys with appropriate permissions for BuildBot
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: yes
    owner: 1000 #Note: This is the hardcoded buildbot user inside the docker image, do not change this
    group: 1000
    mode: 0600
  with_items:
    - { src: "{{ buildbot_home }}/.ssh/id_rsa", dest: "{{ buildbot_home }}/ssh/id_rsa" }
    - { src: "{{ buildbot_home }}/.ssh/id_rsa.pub", dest: "{{ buildbot_home }}/ssh/id_rsa.pub" }
    - { src: "{{ buildbot_home }}/.ssh/known_hosts", dest: "{{ buildbot_home }}/ssh/known_hosts" }
  become: yes

- name: Ensure latest Docker images are present
  docker_image:
    name: "{{ docker_image_user }}/{{ docker_image_worker }}"
  become: yes
