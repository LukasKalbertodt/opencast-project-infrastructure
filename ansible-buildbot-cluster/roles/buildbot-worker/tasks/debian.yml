---

- name: Install BuildBot system level dependencies
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  become: yes
  with_items:
    - python-pip
    - python-dev
    - build-essential
    - git
    - openjdk-8-jdk
    - maven
    - dpkg-dev
    - devscripts
    - dh-exec
    - sudo
#TODO: Needs ffmpeg!

- name: Install BuildBot Python level dependencies
  pip:
    name: "{{ item }}"
  become: yes
  with_items:
    - buildbot-worker

- name: Create BuildBot user
  user:
    name: 'buildbot'
    password: '$6$rounds=656000$wuuAoKugbM31ca7G$4ixDGH6.G54ZLIfepc4LhiNsV5UUxeXdfh/3fFhjrsvW3Jg9CgjsMta66hcM/41AptJoTq0wX1ebN03k.2hso/'
    update_password: always
    shell: /sbin/nologin
  become: yes

- name: Detect BuildBot home directory
  shell: >
          egrep "^buildbot:" /etc/passwd | awk -F: '{ print $6 }'
  changed_when: false
  register: buildbot_home

- name: Create BuildBot worker instance
  shell: buildbot-worker create-worker {{ inventory_hostname }} {{ groups['master'][0] }} {{ inventory_hostname }} {{ password }}
  args:
    chdir: "{{ buildbot_home.stdout_lines[0] }}"
  become: yes
  become_user: buildbot

- name: Template BuildBot worker configuration
  template:
    src: "{{ item }}"
    dest: "{{ buildbot_home.stdout_lines[0] }}/{{ inventory_hostname }}/info/{{ item }}"
    owner: buildbot
    force: yes
  become: yes
  become_user: buildbot
  with_items:
    - admin
    - host

- name: Start BuildBot worker {{ inventory_hostname }}
  shell: buildbot-worker restart {{ inventory_hostname }}
  args:
    chdir: "{{ buildbot_home.stdout_lines[0] }}"
  become: yes
  become_user: buildbot
