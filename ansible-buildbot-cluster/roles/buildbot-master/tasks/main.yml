---

- name: Install Python pip
  package:
    name: python-pip
    state: latest
  become: yes

- name: Install docker-py for Docker latent worker support
  pip:
    name: "{{ item }}"
    state: latest
  become: yes
  with_items:
    - docker
    - docker-compose

  #Note, we're using /bin/bash here rather than /sbin/nologin or /bin/false because we need to be able to log in!
- name: Create BuildBot user
  user:
    name: '{{ buildbot_user }}'
    password: "{{ lookup('password', '/dev/null encrypt=sha1_crypt length=32') }}"
    update_password: always
    home: "{{ buildbot_home }}"
    groups: docker
    shell: /bin/bash
  become: yes
  when: create_buildbot_user

- name: Determine Buildbot user's UID and GID
  getent:
    database: passwd
    key: "{{ buildbot_user }}"
    split: ":"
  become: yes

- name: Ensure required directories exist and have the right permissions
  file:
    state: directory
    path: "{{ item  }}"
    owner: "{{ buildbot_user }}"
    group: "{{ buildbot_user }}"
    recurse: yes
  become: yes
  with_items:
    - "{{ buildbot_home }}"
    - "{{ disk_base }}"
    - "{{ buildbot_home }}/buildbot-config"
    - "{{ buildbot_home }}/nginx-config"

- name: Template configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ buildbot_user }}"
    force: yes
  become: yes
  with_items:
    - { src: "docker-compose.yml", dest: "{{ buildbot_home }}/docker-compose.yml" }
    - { src: "db.env", dest: "{{ buildbot_home }}/db.env" }
    - { src: "master.cfg", dest: "{{ buildbot_home }}/buildbot-config/master.cfg" }
    - { src: "builders.py", dest: "{{ buildbot_home }}/buildbot-config/builders.py" }
    - { src: "build.py", dest: "{{ buildbot_home }}/buildbot-config/build.py" }
    - { src: "common.py", dest: "{{ buildbot_home }}/buildbot-config/common.py" }
    - { src: "debs.py", dest: "{{ buildbot_home }}/buildbot-config/debs.py" }
    - { src: "markdown.py", dest: "{{ buildbot_home }}/buildbot-config/markdown.py" }
    - { src: "reports.py", dest: "{{ buildbot_home }}/buildbot-config/reports.py" }
    - { src: "rpms.py", dest: "{{ buildbot_home }}/buildbot-config/rpms.py" }
    - { src: "schedulers.py", dest: "{{ buildbot_home }}/buildbot-config/schedulers.py" }
    - { src: "changehook.passwd", dest: "{{ buildbot_home }}/buildbot-config/changehook.passwd" }
    - { src: "cleaner.sh", dest: "{{ buildbot_home }}/cleaner.sh" }
    - { src: "buildbot.conf", dest: "{{ buildbot_home }}/nginx-config/buildbot.conf" }
    - { src: "nexus.conf", dest: "{{ buildbot_home }}/nginx-config/nexus.conf" }
  notify: "Start BuildBot"

- name: Add Buildbot cleanup script to the crontab
  cron:
    name: "Remove old build artifacts"
    special_time: daily
    job: "/bin/bash {{ buildbot_base }}/cleaner.sh"
    user: "{{ buildbot_user }}"
    state: present
  become: yes

