---

#########################
# User Related Settings #
#########################

#Which user to login as
login_user: root

#Set this to false if you already have a user set up, make sure to update buildbot_user
create_buildbot_user: True

#The buildbot user's name
buildbot_user: buildbot

#The buildbot user's home directory
buildbot_home: /opt/buildbot


#################
# Deb and RPM Repo Settings #
#################

#The hostname of the package repository
repo_host: pkg.opencast.org
#The package repository suite to install from
repo_suite: stable

#The full URL for the repository.  If you are using your own repo feel free to change this.
oc_deb_repo_url: "deb https://{{repo_username}}:{{repo_password}}@{{repo_host}}/debian {{repo_suite}}/"

#The RPM repo urls
oc_rpm_repo_url: "https://pkg.opencast.org/rpms/release/el/7/x86_64"
oc_rpm_repo_url_noarch: "https://pkg.opencast.org/rpms/release/el/7/noarch"

#The DEB gpg key
oc_deb_repo_key: https://pkg.opencast.org/gpgkeys/opencast-deb.key
oc_deb_repo_key_id: 9A7EA8E5B3820B26

#The RPM gpg key
oc_rpm_repo_key: https://pkg.opencast.org/gpgkeys/opencast-el7-rpm.opencast.org.key


#####################
# BuildBot Settings #
#####################

#The Opencast repository URL
source_repo_url: "https://bitbucket.org/opencast-community/opencast.git"

#The pull request source's owner
source_pr_owner: "opencast-community"

#The pull request sources' repository name
source_pr_slug:  "opencast"

#How long a set of changes needs to be in place prior to starting a build
stability_limit: 120

#Where to fetch the debian packaging build files from
source_deb_repo_url: "https://bitbucket.org/greg_logan/debian_packaging.git"

#Who to send status mails to
mail_to: "dev@opencast.org"


#######################
# Networking Settings #
#######################

#Which port to run buildbot on
buildbot_port: 8010

#Set this to true to configure nginx, false to do it manually
config_nginx: True


##################
# Path Fragments #
##################

#URI fragments defining where things should end up, relative to a given root directory/URL
artifacts_fragment: "%(prop:branch_pretty)s/%(prop:buildnumber)s-%(prop:build_timestamp)s"
parent_fragment: "%(prop:branch_pretty)s/%(prop:parent_build)s-%(prop:build_timestamp)s"
reports_fragment: "reports/%(prop:branch_pretty)s"
debs_fragment: "{{ parent_fragment }}/debs"
rpms_fragment: "{{ parent_fragment }}/rpms"


#################
# URL Settings #
#################

#Where Builbot lives, relative to the webserver root.  Leave this alone to have http://$servername/ be buildbot
#String needs to start with a non-slash, and end with a slash (ie, buildbot/, not /buildbot or /builtbot/)
buildbot_url: ""

#Build url base
url_base: /builds


#Build url with build properties
artifacts_url: "{{ url_base }}/{{ artifacts_fragment }}"

#Build url for the reports
reports_url: "{{ url_base }}/{{ reports_fragment }}"
#Build url for the debs
debs_url: "{{ url_base }}/{{ debs_fragment }}"
#Build url for the rpms
rpms_url: "{{ url_base }}/{{ rpms_fragment }}"

#################
# Disk Settings #
#################

#Where the buildbot install lives
buildbot_base: "{{ buildbot_home }}/{{ inventory_hostname }}"

#Where the master config file lives
buildbot_master_config: "{{ buildbot_base }}/master.cfg"

#Where built artifacts of all types live
disk_base: /var/www/buildbot


#Build location on master filesystem
artifacts_dist_base: "{{ disk_base }}/{{ artifacts_fragment }}"

#Build location on the master filesystem as seen by a child job
parent_dist_base: "{{ disk_base }}/{{ parent_fragment }}"

#The location on disk to deploy the reports to
deployed_reports: "{{ disk_base }}/{{ reports_fragment }}"

#The location on disk to deploy the debs to
#Note that this is using the *parent* dist base
deployed_debs: "{{ disk_base }}/{{ debs_fragment }}"

#The location on disk to deploy the debs to
#Note that this is using the *parent* dist base
deployed_rpms: "{{ disk_base }}/{{ rpms_fragment }}"


#####################
# Buildbot Commands #
#####################

#Don't change these, change the paths and whatnot above

#What to run to create the base master
buildbot_create_master: "{{ buildbot_base }}/bin/buildbot create-master {{ inventory_hostname }}"

#What to run to apply the master config
buildbot_apply: "{{ buildbot_base }}/bin/buildbot reconfig {{ inventory_hostname }}"

#What to run to create a worker
buildbot_create_worker: "{{ buildbot_base }}/bin/buildbot-worker create-worker {{ inventory_hostname }} {{ groups['master'][0] }} {{ id }} {{ password }}"


#############
# Auth bits #
#############

#The OAth bits.  These are used to power the login side of things for BuildBot
#These don't need to be right for testing, you just won't be able to log in
#These are set here so the playbooks don't fail, but should be overridden in the host vars
bitbucket_oath_client_id: FAKE_CLIENT_ID
bitbucket_oath_client_secret: FAKE_SECRET

#The credentials to use when installing the workers.  This is used to get an appropriate version of ffmpeg from the repo
#These are defined here, but need to be overridden in the host vars
repo_username: FAKE_USERNAME
repo_password: FAKE_PASSWORD
