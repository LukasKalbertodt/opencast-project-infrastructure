---

#########################
# User Related Settings #
#########################

#Which user to login as
login_user: root

#Set this to false if you already have a user set up, make sure to update buildbot_user
create_buildbot_user: True

#The buildbot user's name
buildbot_user: buildbot

#The buildbot user's home directory
buildbot_home: /opt/buildbot


#######################
# Networking Settings #
#######################

#Which port to run buildbot on
buildbot_port: 8010

#Set this to true to configure nginx, false to do it manually
config_nginx: True

#Where Builbot lives, relative to the webserver root.  Leave this alone to have http://$servername/ be buildbot
#String needs to start with a non-slash, and end with a slash (ie, buildbot/, not /buildbot or /builtbot/)
buildbot_url: ""

#Build url base
build_url_base: /builds

#Build url with build properties
build_artifacts_url: "{{ build_url_base }}/%(prop:branch_pretty)s/%(prop:buildnumber)s-%(prop:build_timestamp)s"

#The hostname of the package repository
repo_host: pkg.opencast.org
#The package repository suite to install from
repo_suite: stable

#The full URL for the repository.  If you are using your own repo feel free to change this.
oc_deb_repo_url: "deb https://{{repo_username}}:{{repo_password}}@{{repo_host}}/debian {{repo_suite}}/"

#The RPM repo urls
oc_rpm_repo_url: "https://pkg.opencast.org/rpms/release/el/7/x86_64"
oc_rpm_repo_url_noarch: "https://pkg.opencast.org/rpms/release/el/7/noarch"

#The DEB gpg key
oc_deb_repo_key: https://pkg.opencast.org/gpgkeys/opencast-deb.key
oc_deb_repo_key_id: 9A7EA8E5B3820B26

#The RPM gpg key
oc_rpm_repo_key: https://pkg.opencast.org/gpgkeys/opencast-el7-rpm.opencast.org.key

#################
# Disk Settings #
#################

#Where the base for buildbot lives
buildbot_base: "{{ buildbot_home }}/{{ inventory_hostname }}"

#Where the master config file lives
buildbot_master_config: "{{ buildbot_base }}/master.cfg"

#Build location on master filesystem
build_dest_base: /var/www/buildbot

#Build location on master filesystem
build_dest: "{{ build_dest_base }}/%(prop:branch_pretty)s/%(prop:buildnumber)s-%(prop:build_timestamp)s"

#Build locatino for child builds.  This is used by the reports and debs.
build_master_src: "{{ build_dest_base }}/%(prop:branch_pretty)s/%(prop:parent_build)s-%(prop:build_timestamp)s"

#The location on disk to deploy the reports to
deployed_reports: "{{ build_dest }}/reports/%(prop:branch_pretty)s"


#####################
# Buildbot Commands #
#####################

#What to run to create the base master
buildbot_create_master: "{{ buildbot_base }}/bin/buildbot create-master {{ inventory_hostname }}"

#What to run to apply the master config
buildbot_apply: "{{ buildbot_base }}/bin/buildbot reconfig {{ inventory_hostname }}"

#What to run to create a worker
buildbot_create_worker: "{{ buildbot_base }}/bin/buildbot-worker create-worker {{ inventory_hostname }} {{ groups['master'][0] }} {{ id }} {{ password }}"


#############
# Auth bits #
#############

#The OAth bits.  These are used to power the login side of things for BuildBot
#These don't need to be right for testing, you just won't be able to log in
#These are set here so the playbooks don't fail, but should be overridden in the host vars
bitbucket_oath_client_id: FAKE_CLIENT_ID
bitbucket_oath_client_secret: FAKE_SECRET

#The credentials to use when installing the workers.  This is used to get an appropriate version of ffmpeg from the repo
#These are defined here, but need to be overridden in the host vars
repo_username: FAKE_USERNAME
repo_password: FAKE_PASSWORD
