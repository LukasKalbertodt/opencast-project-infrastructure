---

###
# Install Opencast RPM repositories

- name: install repository dependencies (deb)
  package:
    name: "{{item}}"
    state: present
  loop:
    - apt-transport-https
    - ca-certificates
    - sudo
  when: >
    ansible_distribution == 'Debian'
    or ansible_distribution == 'Ubuntu'

- name: install opencast repository (rh)
  yum_repository:
    file: opencast
    name: "{{item.name}}"
    description: "{{item.description}}"
    baseurl: "{{item.baseurl}}"
    username: "{{opencast_rpm_repo_username}}"
    password: "{{opencast_rpm_repo_password}}"
    enabled: "{{item.enabled}}"
    gpgcheck: yes
    gpgkey: https://pkg.opencast.org/gpgkeys/opencast-el7-rpm.opencast.org.key
  loop:
    - { name: "opencast",
        description: "Opencast el 7 Repository",
        baseurl: "https://pkg.opencast.org/rpms/release/el/7/x86_64",
        enabled: "yes" }
    - { name: "opencast-noarch",
        description: "Opencast el 7 Repository - noarch",
        baseurl: "https://pkg.opencast.org/rpms/release/el/7/noarch",
        enabled: "yes" }
    - { name: "opencast-debuginfo",
        description: "Opencast el 7 Repository - debuginfo",
        baseurl: "https://pkg.opencast.org/rpms/release/el/7/debuginfo",
        enabled: "no" }
  when: >
    ansible_distribution == 'CentOS'
    or ansible_distribution == 'RedHat'
    or ansible_distribution == 'Scientific'

- name: install opencast testing repository (rh)
  yum_repository:
    file: opencast-testing
    name: "{{item.name}}"
    description: "{{item.description}}"
    baseurl: "{{item.baseurl}}"
    username: "{{opencast_rpm_repo_username}}"
    password: "{{opencast_rpm_repo_password}}"
    enabled: "{{item.enabled}}"
    gpgcheck: yes
    gpgkey: https://pkg.opencast.org/gpgkeys/opencast-el7-rpm.opencast.org.key
  loop:
    - { name: "opencast-testing",
        description: "Opencast el 7 Testing Repository",
        baseurl: "https://pkg.opencast.org/rpms/testing/el/7/x86_64",
        enabled: "no" }
    - { name: "opencast-testing-noarch",
        description: "Opencast el 7 Testing Repository - noarch",
        baseurl: "https://pkg.opencast.org/rpms/testing/el/7/noarch",
        enabled: "no" }
    - { name: "opencast-testing-debuginfo",
        description: "Opencast el 7 Testing Repository - debuginfo",
        baseurl: "https://pkg.opencast.org/rpms/testing/el/7/debuginfo",
        enabled: "no" }
  when: >
    ansible_distribution == 'CentOS'
    or ansible_distribution == 'RedHat'
    or ansible_distribution == 'Scientific'

- name: add apt signing key for opencast repository
  apt_key:
    url: https://pkg.opencast.org/gpgkeys/opencast-deb.key
    state: present
  when: >
    ansible_distribution == 'Debian'
    or ansible_distribution == 'Ubuntu'

- name: install deb repository
  apt_repository:
    repo: "deb https://{{opencast_rpm_repo_username}}:{{opencast_rpm_repo_password}}@pkg.opencast.org/debian {{item}}"
    state: present
    filename: opencast
  loop:
    - stable/
    - testing/
  when: >
    ansible_distribution == 'Debian'
    or ansible_distribution == 'Ubuntu'


###
# Create opencast user and directory

- name: create opencast user
  user:
    name: opencast
    createhome: yes
    state: present

- name: add vmusers groups uos servers
  user:
    name: opencast
    groups: vmusers
    append: yes
  when: "'uos' in group_names"

- name: create opencast data directory
  file:
    path: /srv/opencast
    state: directory
    mode: 0775
    owner: opencast
    group: opencast

###
# Install Opencast dependencies

- name: install opencast dependencies (rh)
  package:
    name: "{{item}}"
    state: present
  loop:
    - nmap-ncat
    - curl
    - ffmpeg
    - tesseract
    - hunspell
    - tesseract-langpack-deu
    - activemq-dist
  when: >
    ansible_distribution == 'CentOS'
    or ansible_distribution == 'RedHat'
    or ansible_distribution == 'Scientific'

- name: install opencast dependencies (deb)
  package:
    name: "{{item}}"
    state: present
  loop:
    - activemq-dist
    - curl
    - ffmpeg-dist
    - hunspell
    - netcat
    - sox
    - synfig
    - tesseract-ocr
  when: >
    ansible_distribution == 'Debian'
    or ansible_distribution == 'Ubuntu'

- name: enable activemq service
  service:
    name: activemq
    enabled: yes

###
# Install build and ingest scripts, install systemd service files

- name: install opencast build and ingest scripts
  template:
    src: "{{item}}"
    dest: "/home/opencast/{{item}}"
    mode: 0750
    owner: opencast
    group: opencast
  loop:
    - opencast-build.sh
    - opencast-ingest.sh

- name: install systemd service files
  copy:
    src: "{{item}}"
    dest: /etc/systemd/system/
    mode: 0644
    owner: root
    group: root
    force: yes
  loop:
    - opencast.service
    - opencast-build.service
    - opencast-build.timer

- name: give opencast user rights to run build commands with higher privileges
  copy:
    src: opencast-build-sudoers
    dest: /etc/sudoers.d/
    mode: 0440
    owner: root
    group: root
    force: yes

###
# Enable and run opencast buid service

- name: enable opencast build service
  systemd:
    daemon_reload: yes
    name: opencast-build.timer
    enabled: yes
    state: started

- name: enable opencast service
  service:
    name: opencast
    enabled: yes

- name: run opencast build service
  service:
    name: opencast-build.service
    state: started
